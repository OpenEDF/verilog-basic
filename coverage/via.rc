@verdi rc file Version 1.0
[Design@#Exploration]
Is_Group = TRUE
DisplayName = "Design Exploration"
RcName = "Design@#Exploration"
[Design@#Exploration.Get@#Constant@#Assign]
Is_Group = FALSE
DisplayName = "Get Constant Assign"
RcName = "Get@#Constant@#Assign"
FileName = "getConstAssign.tcl"
Path = "share/VIA/Apps/DesignComprehension/GetConstAssign"
Type = "TCL"
Icon = "getConstAssign.png"
Procedure = "get_const_assign_main"
Help = "getConstAssign.htm"
Argument = TRUE
Argument_Name = "Output Log" "Modules (Optional)" 
Output = "0 "
Argument_Value = "getConstAssign.log" "*" 
Argument_Browser_Type = "File" "Instance" 
Argument_Rule_File = "getConstAssign_rule.rc" "" 
[Design@#Exploration.Get@#Equivalent@#Signal]
Is_Group = FALSE
DisplayName = "Get Equivalent Signal"
RcName = "Get@#Equivalent@#Signal"
FileName = "getEqSignal.tcl"
Path = "share/VIA/Apps/DesignComprehension/GetEqSignal"
Type = "TCL"
Icon = "getEqSignal.png"
Procedure = "get_eq_signal_main"
Help = "getEqSignal.htm"
Argument = TRUE
Argument_Name = "Input Type" "Signal(s)" "Output Log" 
Output = "2 "
Argument_Value = "{File} {Name}" "" "getEqSignal.log" 
Argument_Browser_Type = "None" "File" "File" 
Argument_Rule_File = "" "" "getEqSignal_rule.rc" 
[Design@#Exploration.Get@#FanIn@#Register]
Is_Group = FALSE
DisplayName = "Get FanIn Register"
RcName = "Get@#FanIn@#Register"
FileName = "getFanInRegister.tcl"
Path = "share/VIA/Apps/DesignComprehension/GetFanInRegister"
Type = "TCL"
Icon = "getFanInRegister.png"
Procedure = "get_fanIn_register_main"
Help = "getFanInRegister.htm"
Argument = TRUE
Argument_Name = "Input Type" "Signal(s)" "Output Log" 
Output = "2 "
Argument_Value = "{File} {Name}" "" "getFanInRegister.log" 
Argument_Browser_Type = "None" "File" "File" 
Argument_Rule_File = "" "" "getFanInRegister_rule.rc" 
[Design@#Exploration.Get@#FanOut@#Register]
Is_Group = FALSE
DisplayName = "Get FanOut Register"
RcName = "Get@#FanOut@#Register"
FileName = "getFanOutRegister.tcl"
Path = "share/VIA/Apps/DesignComprehension/GetFanOutRegister"
Type = "TCL"
Icon = "getFanOutRegister.png"
Procedure = "get_fanOut_register_main"
Help = "getFanOutRegister.htm"
Argument = TRUE
Argument_Name = "Input Type" "Signal(s)" "Output Log" 
Output = "2 "
Argument_Value = "{File} {Name}" "" "getFanOutRegister.log" 
Argument_Browser_Type = "None" "File" "File" 
Argument_Rule_File = "" "" "getFanOutRegister_rule.rc" 
[Design@#Exploration.Get@#Force@#Statement]
Is_Group = FALSE
DisplayName = "Get Force Statement"
RcName = "Get@#Force@#Statement"
FileName = "getForceStmt.tcl"
Path = "share/VIA/Apps/DesignComprehension/GetForceStmt"
Type = "TCL"
Icon = "getForceStmt.png"
Procedure = "get_force_stmt_main"
Help = "getForceStmt.htm"
Argument = TRUE
Argument_Name = "Output Log" 
Output = "0 "
Argument_Value = "getForceStmt.log" 
Argument_Browser_Type = "File" 
Argument_Rule_File = "getForceStmt_rule.rc" 
[Design@#Exploration.Get@#Generate@#Scope]
Is_Group = FALSE
DisplayName = "Get Generate Scope"
RcName = "Get@#Generate@#Scope"
FileName = "getGenScope.tcl"
Path = "share/VIA/Apps/DesignComprehension/GetGenScope"
Type = "TCL"
Icon = "getGenScope.png"
Procedure = "get_gen_scope_main"
Help = "getGenScope.htm"
Argument = TRUE
Argument_Name = "Output Log" 
Output = "0 "
Argument_Value = "getGenScope.log" 
Argument_Browser_Type = "File" 
Argument_Rule_File = "getGenScope_rule.rc" 
[Design@#Exploration.Get@#Hierarchy@#CSV]
Is_Group = FALSE
DisplayName = "Get Hierarchy CSV"
RcName = "Get@#Hierarchy@#CSV"
FileName = "getModHierCSV.tcl"
Path = "share/VIA/Apps/DesignComprehension/GetModHierCSV"
Type = "TCL"
Icon = "getModHierCSV.png"
Procedure = "get_mod_hier_csv_main"
Help = "getModHierCSV.htm"
Argument = TRUE
Argument_Name = "Target Scope (Optional)" "Output Log" 
Output = "1 "
Argument_Value = "[srcGetScope]" "getHier.csv" 
Argument_Browser_Type = "Instance" "File" 
Argument_Rule_File = "" "" 
[Design@#Exploration.Get@#Module@#Hierarchy]
Is_Group = FALSE
DisplayName = "Get Module Hierarchy"
RcName = "Get@#Module@#Hierarchy"
FileName = "getModHier.tcl"
Path = "share/VIA/Apps/DesignComprehension/GetModHier"
Type = "TCL"
Icon = "getModHier.png"
Procedure = "get_mod_hier_entry"
Help = "getModHier.htm"
Argument = TRUE
Argument_Name = "Target Scope (Optional)" "Output Log" "Skip Library Instance" 
Output = "1 "
Argument_Value = "[srcGetScope]" "getModHier.log" "{Yes} {No}" 
Argument_Browser_Type = "Instance" "File" "None" 
Argument_Rule_File = "" "getModHier_rule.rc" "" 
[Design@#Exploration.Get@#Module@#IO]
Is_Group = FALSE
DisplayName = "Get Module IO"
RcName = "Get@#Module@#IO"
FileName = "getModIO.tcl"
Path = "share/VIA/Apps/DesignComprehension/GetModIO"
Type = "TCL"
Icon = "getModIO.png"
Procedure = "get_mod_io_main"
Help = "getModIO.htm"
Argument = TRUE
Argument_Name = "Modules (Optional)" "Output Log" "Target Scope (Optional)" 
Output = "1 "
Argument_Value = "*" "getModIO.log" "" 
Argument_Browser_Type = "Instance" "None" "Instance" 
Argument_Rule_File = "" "getModIO_rule.rc" "" 
[Design@#Exploration.Get@#Module@#Parameter]
Is_Group = FALSE
DisplayName = "Get Module Parameter"
RcName = "Get@#Module@#Parameter"
FileName = "getModParam.tcl"
Path = "share/VIA/Apps/DesignComprehension/GetModParam"
Type = "TCL"
Icon = "getModParam.png"
Procedure = "get_mod_param_main"
Help = "getModParam.htm"
Argument = TRUE
Argument_Name = "Modules (Optional)" "Output Log" 
Output = "1 "
Argument_Value = "*" "getModParam.log" 
Argument_Browser_Type = "Instance" "File" 
Argument_Rule_File = "" "getModParam_rule.rc" 
[Design@#Exploration.Get@#Module@#Signal]
Is_Group = FALSE
DisplayName = "Get Module Signal"
RcName = "Get@#Module@#Signal"
FileName = "getModSignal.tcl"
Path = "share/VIA/Apps/DesignComprehension/GetModSignal"
Type = "TCL"
Icon = "getModSignal.png"
Procedure = "get_mod_signal_main"
Help = "getModSignal.htm"
Argument = TRUE
Argument_Name = "Modules (Optional)" "Output Log" 
Output = "1 "
Argument_Value = "*" "getModSignal.log" 
Argument_Browser_Type = "Instance" "File" 
Argument_Rule_File = "" "getModSignal_rule.rc" 
[Design@#Exploration.Get@#Netlist@#Overview]
Is_Group = FALSE
DisplayName = "Get Netlist Overview"
RcName = "Get@#Netlist@#Overview"
FileName = "getNetlistOverview.tcl"
Path = "share/VIA/Apps/DesignComprehension/GetNetlistOverview"
Type = "TCL"
Icon = "getNetlistOverview.png"
Procedure = "get_netlist_overview_main"
Help = "getNetlistOverview.htm"
Argument = TRUE
Argument_Name = "Output Log" 
Output = "0 "
Argument_Value = "getNetlistOverview.log" 
Argument_Browser_Type = "File" 
Argument_Rule_File = "getNetlistOverview_rule.rc" 
[Design@#Exploration.List@#Include@#Files]
Is_Group = FALSE
DisplayName = "List Include Files"
RcName = "List@#Include@#Files"
FileName = "listIncludeFiles.tcl"
Path = "share/VIA/Apps/DesignComprehension/ListIncludeFiles"
Type = "TCL"
Icon = "listIncludeFiles.png"
Procedure = "list_include_files_main"
Help = "listIncludeFiles.htm"
Argument = TRUE
Argument_Name = "Output Log" 
Output = "0 "
Argument_Value = "listIncludeFiles.log" 
Argument_Browser_Type = "File" 
Argument_Rule_File = "listIncludeFiles_rule.rc" 
[Design@#Exploration.List@#Module@#Define]
Is_Group = FALSE
DisplayName = "List Module Define"
RcName = "List@#Module@#Define"
FileName = "listModDefine.tcl"
Path = "share/VIA/Apps/DesignComprehension/ListModDefine"
Type = "TCL"
Icon = "listModDefine.png"
Procedure = "list_mod_define_main"
Help = "listModDefine.htm"
Argument = TRUE
Argument_Name = "Output Log" 
Output = "0 "
Argument_Value = "listModDefine.log" 
Argument_Browser_Type = "File" 
Argument_Rule_File = "listModDefine_rule.rc" 
[Design@#Exploration.List@#Module@#Files]
Is_Group = FALSE
DisplayName = "List Module Files"
RcName = "List@#Module@#Files"
FileName = "listModFiles.tcl"
Path = "share/VIA/Apps/DesignComprehension/ListModFiles"
Type = "TCL"
Icon = "listModFiles.png"
Procedure = "list_mod_files_main"
Help = "listModFiles.htm"
Argument = TRUE
Argument_Name = "Output Log" 
Output = "0 "
Argument_Value = "listModFiles.log" 
Argument_Browser_Type = "File" 
Argument_Rule_File = "listModFiles_rule.rc" 
[Design@#Exploration.List@#Module@#Include@#Files]
Is_Group = FALSE
DisplayName = "List Module Include Files"
RcName = "List@#Module@#Include@#Files"
FileName = "listModIncFiles.tcl"
Path = "share/VIA/Apps/DesignComprehension/ListModIncFiles"
Type = "TCL"
Icon = "listModIncFiles.png"
Procedure = "list_mod_inc_files_main"
Help = "listModIncFiles.htm"
Argument = TRUE
Argument_Name = "Output Log" 
Output = "0 "
Argument_Value = "listModIncFiles.log" 
Argument_Browser_Type = "File" 
Argument_Rule_File = "listModIncFiles_rule.rc" 
[Design@#Exploration.List@#Registers]
Is_Group = FALSE
DisplayName = "List Registers"
RcName = "List@#Registers"
FileName = "listRegisters.tcl"
Path = "share/VIA/Apps/DesignComprehension/ListRegisters"
Type = "TCL"
Icon = "listRegisters.png"
Procedure = "list_registers_main"
Help = "listRegisters.htm"
Argument = TRUE
Argument_Name = "Target Scope (Optional)" "Output Log" "Non Resettable Flop" 
Output = "1 "
Argument_Value = "[srcGetScope]" "listRegisters.log" "{FALSE} {TRUE}" 
Argument_Browser_Type = "Instance" "File" "None" 
Argument_Rule_File = "" "listRegisters_rule.rc" "" 
[Design@#Exploration.Report@#Hierarchical@#Reference]
Is_Group = FALSE
DisplayName = "Report Hierarchical Reference"
RcName = "Report@#Hierarchical@#Reference"
FileName = "reportHierRef.tcl"
Path = "share/VIA/Apps/DesignComprehension/ReportHierRef"
Type = "TCL"
Icon = "reportHierRef.png"
Procedure = "report_hier_ref_main"
Help = "reportHierRef.htm"
Argument = TRUE
Argument_Name = "Output Log" 
Output = "0 "
Argument_Value = "reportHierRef.log" 
Argument_Browser_Type = "File" 
Argument_Rule_File = "reportHierRef_rule.rc" 
[Design@#Exploration.Signal@#Search]
Is_Group = FALSE
DisplayName = "Signal Search"
RcName = "Signal@#Search"
FileName = "signalSearch.tcl"
Path = "share/VIA/Apps/DesignComprehension/SignalSearch"
Type = "TCL"
Icon = "signalSearch.png"
Procedure = "signal_search_main"
Help = "signalSearch.htm"
Argument = TRUE
Argument_Name = "Search Rule" "Signal Keywords" "Target Scope" "Output Log" "Show Signal Range" "Show Bit Blasted" "Exclude Library Signals" "Show Port Only" 
Output = "3 "
Argument_Value = "{Regex} {Wildcard}" "" "[srcGetScope]" "signalSearch.log" "{FALSE} {TRUE}" "{FALSE} {TRUE}" "{FALSE} {TRUE}" "{FALSE} {TRUE}" 
Argument_Browser_Type = "None" "None" "Instance" "File" "None" "None" "None" "None" 
Argument_Rule_File = "" "" "" "signalSearch_rule.rc" "" "" "" "" 
[Design@#Exploration.List@#All@#Files@#in@#Design]
Is_Group = FALSE
DisplayName = "List All Files in Design"
RcName = "List@#All@#Files@#in@#Design"
FileName = "listAllFilesInDesign.tcl"
Path = "share/VIA/Apps/DesignComprehension/ListAllFilesInDesign"
Type = "TCL"
Icon = "listAllFilesInDesign.png"
Procedure = "list_all_files_main"
Help = "listAllFilesInDesign.htm"
Argument = TRUE
Argument_Name = "Output Log" 
Output = "0 "
Argument_Value = "listAllFiles.log" 
Argument_Browser_Type = "File" 
Argument_Rule_File = "listAllFilesInDesign_rule.rc" 
[Design@#Exploration.Report@#VHDL@#Component]
Is_Group = FALSE
DisplayName = "Report VHDL Component"
RcName = "Report@#VHDL@#Component"
FileName = "ReportVhdlComp.tcl"
Path = "share/VIA/Apps/DesignComprehension/ReportVhdlComp"
Type = "TCL"
Icon = "ReportVhdlComp.png"
Procedure = "report_vhdl_component"
Help = "ReportVhdlComp.htm"
Argument = TRUE
Argument_Name = "Target Scope (Optional)" "Output Log" 
Output = "1"
Argument_Value = "[srcGetScope]" "ReportVhdlComp.log" 
Argument_Browser_Type = "Instance" "File" 
Argument_Rule_File = "" "ReportVhdlCompRule.rc" 
[Design@#Exploration.Find@#Instance@#with@#Module@#Def@#Name]
Is_Group = FALSE
DisplayName = "Find Instance with Module Def Name"
RcName = "Find@#Instance@#with@#Module@#Def@#Name"
FileName = "findInstDefWild.tcl"
Path = "share/VIA/Apps/DesignComprehension/FindInstDefWild"
Type = "TCL"
Icon = "findInstDefWild.png"
Procedure = "find_inst_mod_def_wildcard"
Help = "findInstDefWild.htm"
Argument = TRUE
Argument_Name = "Pattern (Wildcard)" "Output Log" "Show Def Name" "Case Insensitive" "Depth" "Scope" 
Output = "1 "
Argument_Value = "{*}" "instance.log" "{No} {Yes}" "{No} {Yes}" "0" "" 
Argument_Browser_Type = "None" "File" "None" "None" "None" "Instance" 
Argument_Rule_File = "" "" "" "" "" "" 
[Design@#Exploration.Report@#Exception@#Paths]
Is_Group = FALSE
DisplayName = "Report Exception Paths"
RcName = "Report@#Exception@#Paths"
FileName = "reportExceptionPaths.tcl"
Path = "share/VIA/Apps/DesignComprehension/ReportExceptionPaths"
Type = "TCL"
Icon = "reportExceptionPaths.png"
Procedure = "report_exception_path_main"
Help = "reportExceptionPaths.htm"
Argument = TRUE
Argument_Name = "PT exception report" "PT clock report" "Output Log" 
Output = "2 "
Argument_Value = "" "" "reportExceptionPaths.log" 
Argument_Browser_Type = "File" "File" "None" 
Argument_Rule_File = "" "" "" 
[Design@#Exploration.Get@#Typedef@#Size]
Is_Group = FALSE
DisplayName = "Get Typedef Size"
RcName = "Get@#Typedef@#Size"
FileName = "getTypedefSize.tcl"
Path = "share/VIA/Apps/DesignComprehension/GetTypedefSize"
Type = "TCL"
Icon = "getTypedefSize.png"
Procedure = "get_typedef_size_main"
Help = "getTypedefSize.htm"
Argument = TRUE
Argument_Name = "Scope" "Typedef" "Depth" "Output Log" 
Output = "3 "
Argument_Value = "*" "*" "0" "getTypedefSize.log" 
Argument_Browser_Type = "None" "None" "None" "File" 
Argument_Rule_File = "" "" "" "getTypedefSize.rc" 
[Design@#Manipulation]
Is_Group = TRUE
DisplayName = "Design Manipulation"
RcName = "Design@#Manipulation"
[Design@#Manipulation.ChipInt]
Is_Group = FALSE
DisplayName = "ChipInt"
RcName = "ChipInt"
FileName = "chipInt.tcl"
Path = "share/VIA/Apps/DesignManipulation/ChipInt"
Type = "TCL"
Icon = "chipInt.png"
Procedure = "chip_int_main"
Help = "chipInt.htm"
PreProc = "npiDlSym -func via_dm_app_init"
Argument = FALSE
[Design@#Manipulation.HierMan]
Is_Group = FALSE
DisplayName = "HierMan"
RcName = "HierMan"
FileName = "hierman.tcl"
Path = "share/VIA/Apps/DesignManipulation/HierMan"
Type = "TCL"
Icon = "hierman.png"
Procedure = "hierman_main"
Help = "hierman.htm"
PreProc = "npiDlSym -func via_dm_app_init"
Argument = FALSE
[Design@#Manipulation.PortTieConst]
Is_Group = FALSE
DisplayName = "PortTieConst"
RcName = "PortTieConst"
FileName = "ptc.tcl"
Path = "share/VIA/Apps/DesignManipulation/PortTieConst/"
Type = "TCL"
Icon = "ptc.png"
Procedure = "ptc_main"
Help = "ptc.htm"
Argument = FALSE
[Design@#Manipulation.Ungroup]
Is_Group = FALSE
DisplayName = "Ungroup"
RcName = "Ungroup"
FileName = "ungroup.tcl"
Path = "share/VIA/Apps/DesignManipulation/Ungroup"
Type = "TCL"
Icon = "ungroup.png"
Procedure = "ungroup_main"
Help = "ungroup.htm"
Argument = FALSE
[Design@#Manipulation.Rename@#Instance]
Is_Group = FALSE
DisplayName = "Rename Instance"
RcName = "Rename@#Instance"
FileName = "renameInstance.tcl"
Path = "share/VIA/Apps/DesignManipulation/RenameInstance"
Type = "TCL"
Icon = "renameInstance.png"
Procedure = "rename_instance_main"
Help = "RenameInstance.htm"
Argument = TRUE
Argument_Name = "Instance File" "Prefix" "Postfix" "Output Directory" 
Output = ""
Argument_Value = "" "" "" "Rename_Inst" 
Argument_Browser_Type = "File" "None" "None" "None" 
Argument_Rule_File = "" "" "" "" 
[Design@#Manipulation.Delete@#Pass@#Through@#Path]
Is_Group = FALSE
DisplayName = "Delete Pass Through Path"
RcName = "Delete@#Pass@#Through@#Path"
FileName = "delete_pass_through.tcl"
Path = "share/VIA/Apps/DesignManipulation/DeletePassThrough"
Type = "TCL"
Icon = "delete_pass_through.png"
Procedure = "delete_pass_through_main"
Help = "DeletePassThrough.htm"
PreProc = "npiDlSym -func via_dm_app_init"
Argument = TRUE
Argument_Name = "port_file" "output_dir" 
Output = ""
Argument_Value = "" "delete_pass_through_dir" 
Argument_Browser_Type = "File" "None" 
Argument_Rule_File = "" "" 
[Design@#Manipulation.Disconnect@#Port]
Is_Group = FALSE
DisplayName = "Disconnect Port"
RcName = "Disconnect@#Port"
FileName = "discon.tcl"
Path = "share/VIA/Apps/DesignManipulation/Discon"
Type = "TCL"
Icon = "discon.png"
Procedure = "discon_main"
Help = "discon.htm"
PreProc = "npiDlSym -func via_dm_app_init"
Argument = TRUE
Argument_Name = "port_file" "output_dir" 
Output = ""
Argument_Value = "" "discon_dir" 
Argument_Browser_Type = "File" "None" 
Argument_Rule_File = "" "" 
[Design@#Validation]
Is_Group = TRUE
DisplayName = "Design Validation"
RcName = "Design@#Validation"
[Design@#Validation.Detect@#Assign@#Bit@#Width@#Mismatch]
Is_Group = FALSE
DisplayName = "Detect Assign Bit Width Mismatch"
RcName = "Detect@#Assign@#Bit@#Width@#Mismatch"
FileName = "detectAssignBitWidthMismatch.tcl"
Path = "share/VIA/Apps/DesignValidation/DetectAssignBitWidthMismatch"
Type = "TCL"
Icon = "detectAssignBitWidthMismatch.png"
Procedure = "detect_assign_bit_width_mismatch_main"
Help = "detectAssignBitWidthMismatch.htm"
Argument = TRUE
Argument_Name = "Target Scope (Optional)" "Output Log" 
Output = "1 "
Argument_Value = "[srcGetScope]" "detectAssignBitWidthMismatch.log" 
Argument_Browser_Type = "Instance" "File" 
Argument_Rule_File = "" "detectAssignBitWidthMismatch_rule.rc" 
[Design@#Validation.Detect@#Constant@#Port]
Is_Group = FALSE
DisplayName = "Detect Constant Port"
RcName = "Detect@#Constant@#Port"
FileName = "detectConstPort.tcl"
Path = "share/VIA/Apps/DesignValidation/DetectConstPort"
Type = "TCL"
Icon = "detectConstPort.png"
Procedure = "detect_const_port_main"
Help = "detectConstPort.htm"
Argument = TRUE
Argument_Name = "Output Log" 
Output = "0 "
Argument_Value = "detectConstPort.log" 
Argument_Browser_Type = "File" 
Argument_Rule_File = "detectConstPort_rule.rc" 
[Design@#Validation.Detect@#Open@#Port]
Is_Group = FALSE
DisplayName = "Detect Open Port"
RcName = "Detect@#Open@#Port"
FileName = "detectOpenPort.tcl"
Path = "share/VIA/Apps/DesignValidation/DetectOpenPort"
Type = "TCL"
Icon = "detectOpenPort.png"
Procedure = "detect_open_port_main"
Help = "detectOpenPort.htm"
Argument = TRUE
Argument_Name = "Output Log" 
Output = "0 "
Argument_Value = "detectOpenPort.log" 
Argument_Browser_Type = "File" 
Argument_Rule_File = "detectOpenPort_rule.rc" 
[Design@#Validation.Detect@#Tri-State]
Is_Group = FALSE
DisplayName = "Detect Tri-State"
RcName = "Detect@#Tri-State"
FileName = "detectTriState.tcl"
Path = "share/VIA/Apps/DesignValidation/DetectTriState"
Type = "TCL"
Icon = "detectTriState.png"
Procedure = "detect_tri_state_main"
Help = "detectTriState.htm"
Argument = TRUE
Argument_Name = "Output Log" 
Output = "0 "
Argument_Value = "detectTriState.log" 
Argument_Browser_Type = "File" 
Argument_Rule_File = "detectTriState_rule.rc" 
[Design@#Validation.Check@#Module@#Registered@#Outputs]
Is_Group = FALSE
DisplayName = "Check Module Registered Outputs"
RcName = "Check@#Module@#Registered@#Outputs"
FileName = "checkModRegOut.tcl"
Path = "share/VIA/Apps/DesignValidation/CheckModRegOut"
Type = "TCL"
Icon = "share/VIA/Apps/DesignValidation/CheckModRegOut/checkModRegOut.png"
Procedure = "check_mod_reg_out_main"
Help = "share/VIA/Apps/DesignValidation/CheckModRegOut/checkModRegOut.htm"
Argument = TRUE
Argument_Name = "Output Log" "Module List File (Optional)" 
Output = "0"
Argument_Value = "coding_rule_check.rpt" "" 
Argument_Browser_Type = "File" "File" 
Argument_Rule_File = "crcRule.rc" "" 
[Design@#Validation.Check@#Module@#Registered@#Inputs]
Is_Group = FALSE
DisplayName = "Check Module Registered Inputs"
RcName = "Check@#Module@#Registered@#Inputs"
FileName = "checkModRegIn.tcl"
Path = "share/VIA/Apps/DesignValidation/CheckModRegIn"
Type = "TCL"
Icon = "share/VIA/Apps/DesignValidation/CheckModRegIn/checkModRegIn.png"
Procedure = "check_mod_reg_in_main"
Help = "share/VIA/Apps/DesignValidation/CheckModRegIn/checkModRegIn.htm"
Argument = TRUE
Argument_Name = "Output Log" "Module List File (Optional)" 
Output = "0"
Argument_Value = "coding_rule_check.rpt" "" 
Argument_Browser_Type = "File" "File" 
Argument_Rule_File = "crcRule.rc" "" 
[Design@#Validation.Check@#Module@#Port@#Declarations@#Using@#Modport]
Is_Group = FALSE
DisplayName = "Check Module Port Declarations Using Modport"
RcName = "Check@#Module@#Port@#Declarations@#Using@#Modport"
FileName = "checkModPortDeclModport.tcl"
Path = "share/VIA/Apps/DesignValidation/CheckModPortDeclModport"
Type = "TCL"
Icon = "share/VIA/Apps/DesignValidation/CheckModPortDeclModport/checkModPortDeclModport.png"
Procedure = "check_mod_port_decl_modport_main"
Help = "share/VIA/Apps/DesignValidation/CheckModPortDeclModport/checkModPortDeclModport.htm"
Argument = TRUE
Argument_Name = "Output Log" "Module List File (Optional)" 
Output = "0"
Argument_Value = "coding_rule_check.rpt" "" 
Argument_Browser_Type = "File" "File" 
Argument_Rule_File = "crcRule.rc" "" 
[Design@#Validation.Check@#Module@#Port@#Connections@#Using@#Modport]
Is_Group = FALSE
DisplayName = "Check Module Port Connections Using Modport"
RcName = "Check@#Module@#Port@#Connections@#Using@#Modport"
FileName = "checkModPortConnModport.tcl"
Path = "share/VIA/Apps/DesignValidation/CheckModPortConnModport"
Type = "TCL"
Icon = "share/VIA/Apps/DesignValidation/CheckModPortConnModport/checkModPortConnModport.png"
Procedure = "check_mod_port_conn_modport_main"
Help = "share/VIA/Apps/DesignValidation/CheckModPortConnModport/checkModPortConnModport.htm"
Argument = TRUE
Argument_Name = "Output Log" "Module List File (Optional)" 
Output = "0"
Argument_Value = "coding_rule_check.rpt" "" 
Argument_Browser_Type = "File" "File" 
Argument_Rule_File = "crcRule.rc" "" 
[Design@#Validation.Signal@#Existence@#Check@#in@#Design]
Is_Group = FALSE
DisplayName = "Signal Existence Check in Design"
RcName = "Signal@#Existence@#Check@#in@#Design"
FileName = "signalExistCheckDesign.tcl"
Path = "share/VIA/Apps/DesignValidation/SignalExistCheckDesign"
Type = "TCL"
Icon = "signalExistCheckDesign.png"
Procedure = "signal_exist_check_design_main"
Help = "signalExistCheckDesign.htm"
Argument = TRUE
Argument_Name = "Signal List File" "Output Log" 
Output = "1"
Argument_Value = "" "signalExistCheckDesign.log" 
Argument_Browser_Type = "File" "File" 
Argument_Rule_File = "" "signalExistCheckDesign_rule.rc" 
[Design@#Validation.Module@#Array@#Instantiation@#Check]
Is_Group = FALSE
DisplayName = "Module Array Instantiation Check"
RcName = "Module@#Array@#Instantiation@#Check"
FileName = "moduleArrayInstantiationCheck.tcl"
Path = "share/VIA/Apps/DesignValidation/ModuleArrayInstantiationCheck"
Type = "TCL"
Icon = "moduleArrayInstantiationCheck.png"
Procedure = "module_array_instantiation_check_main"
Help = "moduleArrayInstantiationCheck.htm"
Argument = TRUE
Argument_Name = "Output Log" 
Output = "0"
Argument_Value = "moduleArrayInstantiationCheck.log" 
Argument_Browser_Type = "File" 
Argument_Rule_File = "moduleArrayInstantiationCheck_rule.rc" 
[FSDB@#Investigation]
Is_Group = TRUE
DisplayName = "FSDB Investigation"
RcName = "FSDB@#Investigation"
[FSDB@#Investigation.Detect@#Port@#Z]
Is_Group = FALSE
DisplayName = "Detect Port Z"
RcName = "Detect@#Port@#Z"
FileName = "detectPortZ.tcl"
Path = "share/VIA/Apps/FsdbInvestigation/DetectPortZ"
Type = "TCL"
Icon = "detectPortZ.png"
Procedure = "detect_port_z_main"
Help = "detectPortZ.htm"
Argument = TRUE
Argument_Name = "Modules (Optional)" "FSDB File" "Begin Time" "End Time" "Time Unit" "Output Log" 
Output = "5 "
Argument_Value = "*" "[wvGetActiveFileName]" "" "" "{ns} {ps} {fs} {us} {ms} {s}" "detectPortZ.log" 
Argument_Browser_Type = "Instance" "File" "None" "None" "None" "File" 
Argument_Rule_File = "" "" "" "" "" "detectPortZ_rule.rc" 
[FSDB@#Investigation.Get@#FSDB@#Scope@#Hierarchy]
Is_Group = FALSE
DisplayName = "Get FSDB Scope Hierarchy"
RcName = "Get@#FSDB@#Scope@#Hierarchy"
FileName = "getFsdbScopeHier.tcl"
Path = "share/VIA/Apps/FsdbInvestigation/GetFsdbScopeHier"
Type = "TCL"
Icon = "getFsdbScopeHier.png"
Procedure = "get_fsdb_scope_hier_main"
Help = "getFsdbScopeHier.htm"
Argument = TRUE
Argument_Name = "FSDB File" "Output Log" 
Output = "1 "
Argument_Value = "[wvGetActiveFileName]" "getFsdbScopeHier.log" 
Argument_Browser_Type = "File" "File" 
Argument_Rule_File = "" "getFsdbScopeHier_rule.rc" 
[FSDB@#Investigation.Get@#Register@#Values]
Is_Group = FALSE
DisplayName = "Get Register Values"
RcName = "Get@#Register@#Values"
FileName = "getRegValues.tcl"
Path = "share/VIA/Apps/FsdbInvestigation/GetRegValues"
Type = "TCL"
Icon = "getRegValues.png"
Procedure = "get_reg_values_main"
Help = "getRegValues.htm"
Argument = TRUE
Argument_Name = "FSDB File" "Time" "Time Unit" "Output Log" "Scope (Optional)" "Non Resettable Flop" 
Output = "3 "
Argument_Value = "[wvGetActiveFileName]" "" "{ns} {ps} {fs} {us} {ms} {s}" "getRegValues.log" "" "{FALSE} {TRUE}" 
Argument_Browser_Type = "File" "None" "None" "None" "Instance" "None" 
Argument_Rule_File = "" "" "" "getRegValues_rule.rc" "" "" 
[FSDB@#Investigation.Serial@#Signal@#to@#Parallel]
Is_Group = FALSE
DisplayName = "Serial Signal to Parallel"
RcName = "Serial@#Signal@#to@#Parallel"
FileName = "SerialSig2Parallel.tcl"
Path = "share/VIA/Apps/FsdbInvestigation/SerialSig2Parallel"
Type = "TCL"
Icon = "SerialSig2Parallel.png"
Procedure = "serial_sig_2_parallel"
Help = "SerialSig2Parallel.htm"
Argument = TRUE
Argument_Name = "Signal Name" "Clock Name" "Enable Name" "Clock Count" "FSDB Name" "Output Log" "Begin Time" "End Time" "Ignore Cycle" "Enable Mode" 
Output = "5 "
Argument_Value = "" "" "" "" "[wvGetActiveFileName]" "SerialSig2Parallel.log" "" "" "" "0" 
Argument_Browser_Type = "Signal" "Signal" "Signal" "None" "File" "File" "None" "None" "None" "None" 
Argument_Rule_File = "" "" "" "" "" "SerialSig2ParallelRule.rc" "" "" "" "" 
[FSDB@#Investigation.Signal@#Existence@#Check@#in@#FSDB]
Is_Group = FALSE
DisplayName = "Signal Existence Check in FSDB"
RcName = "Signal@#Existence@#Check@#in@#FSDB"
FileName = "signalExistCheckFSDB.tcl"
Path = "share/VIA/Apps/FsdbInvestigation/SignalExistCheckFSDB"
Type = "TCL"
Icon = "signalExistCheckFSDB.png"
Procedure = "signal_exist_check_FSDB_main"
Help = "signalExistCheckFSDB.htm"
Argument = TRUE
Argument_Name = "FSDB File" "Signal List File" "Output Log" 
Output = "2"
Argument_Value = "[wvGetActiveFileName]" "" "signalExistCheckFSDB.log" 
Argument_Browser_Type = "File" "File" "File" 
Argument_Rule_File = "" "" "signalExistCheckFSDB_rule.rc" 
[FSDB@#Investigation.FSDB@#Signal@#Query]
Is_Group = FALSE
DisplayName = "FSDB Signal Query"
RcName = "FSDB@#Signal@#Query"
FileName = "fsdbSigQ.tcl"
Path = "share/VIA/Apps/FsdbInvestigation/FsdbSigQ"
Type = "TCL"
Icon = "fsdbSigQ.png"
Procedure = "fsdb_sig_Q_main"
Help = "fsdbSigQ.htm"
Argument = TRUE
Argument_Name = "FSDB File" "Output Log" "Signals (Wildcard)" "Signals Exclude (Optional)" "Scope (Optional)" "Scope Exclude (Optional)" "Scope Only (Optional)" 
Output = "1 "
Argument_Value = "[wvGetActiveFileName]" "fsdbSigQ.log" "" "" "" "" "" 
Argument_Browser_Type = "File" "File" "None" "None" "Instance" "Instance" "Instance" 
Argument_Rule_File = "" "fsdbSigQ_rule.rc" "" "" "" "" "" 
[Utility]
Is_Group = TRUE
DisplayName = "Utility"
RcName = "Utility"
[Utility.Macro@#Utility]
Is_Group = TRUE
DisplayName = "Macro Utility"
RcName = "Macro@#Utility"
[Utility.Macro@#Utility.Report@#Conditional@#Macro]
Is_Group = FALSE
DisplayName = "Report Conditional Macro"
RcName = "Report@#Conditional@#Macro"
FileName = "reportConditionalMacro.tcl"
Path = "share/VIA/Apps/DesignComprehension/ReportConditionalMacro"
Type = "TCL"
Icon = "reportConditionalMacro.png"
Procedure = "report_conditional_macro_main"
Help = "reportConditionalMacro.htm"
Argument = TRUE
Argument_Name = "Output Log" "Verbose Dump" 
Output = "0 "
Argument_Value = "reportConditionalMacro.log" "{No} {Yes}" 
Argument_Browser_Type = "File" "None" 
Argument_Rule_File = "reportConditionalMacro_rule.rc" "" 
[Utility.Macro@#Utility.Detect@#FSM@#Macro@#Define]
Is_Group = FALSE
DisplayName = "Detect FSM Macro Define"
RcName = "Detect@#FSM@#Macro@#Define"
FileName = "detectFSMMacroDefine.tcl"
Path = "share/VIA/Apps/DesignComprehension/DetectFSMMacroDefine"
Type = "TCL"
Icon = "detectFSMMacroDefine.png"
Procedure = "detect_FSM_macro_define_main"
Help = "detectFSMMacroDefine.htm"
Argument = TRUE
Argument_Name = "Output File" "Scope Hierarchical Name (Optional)" 
Output = "0 "
Argument_Value = "FSM_State_Macro.rpt" "[srcGetScope]" 
Argument_Browser_Type = "None" "None" 
Argument_Rule_File = "detectFSMMacroDefine.rc" "" 
[Utility.Macro@#Utility.Report@#Macro@#Define]
Is_Group = FALSE
DisplayName = "Report Macro Define"
RcName = "Report@#Macro@#Define"
FileName = "reportMacroDefine.tcl"
Path = "share/VIA/Apps/DesignComprehension/ReportMacroDefine"
Type = "TCL"
Icon = "reportMacroDefine.png"
Procedure = "report_macro_define_main"
Help = "reportMacroDefine.htm"
Argument = TRUE
Argument_Name = "Output Log" "File List (Optional)" 
Output = "0 "
Argument_Value = "reportMacroDefine.log" "" 
Argument_Browser_Type = "File" "File" 
Argument_Rule_File = "reportMacroDefine_rule.rc" "" 
[Utility.Analyze@#Time@#Text@#Log]
Is_Group = TRUE
DisplayName = "Analyze Time Text Log"
RcName = "Analyze@#Time@#Text@#Log"
[Utility.Analyze@#Time@#Text@#Log.Open@#Time@#Text@#Log]
Is_Group = FALSE
DisplayName = "Open Time Text Log"
RcName = "Open@#Time@#Text@#Log"
FileName = "openTimeTextLog.tcl"
Path = "share/VIA/Apps/Interoperability/SyncLogTimeWaveformCursor"
Type = "TCL"
Icon = "openTimeTextLog.png"
Procedure = "open_time_text_log_main"
Help = "analyzeTimeTextLog.htm"
Argument = TRUE
Argument_Name = "time_text_log" 
Output = "0"
Argument_Value = "" 
Argument_Browser_Type = "File" 
Argument_Rule_File = "syncLogTimeWaveformCursor_rule.rc" 
[Utility.Analyze@#Time@#Text@#Log.Synchronize@#Waveform@#Cursor@#to@#Log]
Is_Group = FALSE
DisplayName = "Synchronize Waveform Cursor to Log"
RcName = "Synchronize@#Waveform@#Cursor@#to@#Log"
FileName = "syncLogTimeWaveformCursor.tcl"
Path = "share/VIA/Apps/Interoperability/SyncLogTimeWaveformCursor"
Type = "TCL"
Icon = "syncLogTimeWaveformCursor.png"
Procedure = "sync_log_time_waveform_cursor_main"
Help = "analyzeTimeTextLog.htm"
Argument = TRUE
Argument_Name = "sync_type" 
Output = ""
Argument_Value = "{Begin} {Stop}" 
Argument_Browser_Type = "File" 
Argument_Rule_File = "" 
[Utility.Smart@#Log]
Is_Group = FALSE
DisplayName = "Smart Log"
RcName = "Smart@#Log"
FileName = "logViewer.tcl"
Path = "share/VIA/Apps/Utility/LogViewer"
Type = "TCL"
Icon = "logViewer.png"
Procedure = "log_viewer_main"
Help = "logViewer.htm"
Argument = FALSE
[Utility.Get@#Instance@#List]
Is_Group = FALSE
DisplayName = "Get Instance List"
RcName = "Get@#Instance@#List"
FileName = "instanceList.tcl"
Path = "share/VIA/Apps/Utility/InstanceList"
Type = "TCL"
Icon = "instanceList.png"
Procedure = "instance_list_main"
Help = "instanceList.htm"
Argument = FALSE
[Utility.Get@#Signal@#List]
Is_Group = FALSE
DisplayName = "Get Signal List"
RcName = "Get@#Signal@#List"
FileName = "signalList.tcl"
Path = "share/VIA/Apps/Utility/SignalList"
Type = "TCL"
Icon = "signalList.png"
Procedure = "signal_list_main"
Help = "signalList.htm"
Argument = FALSE
[Utility.Analyze@#Force@#Debug@#Report]
Is_Group = FALSE
DisplayName = "Analyze Force Debug Report"
RcName = "Analyze@#Force@#Debug@#Report"
FileName = "analyzeForceDebugReport.tcl"
Path = "share/VIA/Apps/Interoperability/AnalyzeForceDebugReport"
Type = "TCL"
Icon = "analyzeForceDebugReport.png"
Procedure = "analyze_force_debug_report_main"
Help = "analyzeForceDebugReport.htm"
Argument = TRUE
Argument_Name = "Force Debug Report" 
Output = "0"
Argument_Value = "" 
Argument_Browser_Type = "File" 
Argument_Rule_File = "analyzeForceDebugReport.rc" 
[Utility.Siloti@#Utility]
Is_Group = TRUE
DisplayName = "Siloti Utility"
RcName = "Siloti@#Utility"
[Utility.Siloti@#Utility.Replay@#Assertion@#Instance]
Is_Group = FALSE
DisplayName = "Replay Assertion Instance"
RcName = "Replay@#Assertion@#Instance"
FileName = "replay_assertion_instance.tcl"
Path = "share/VIA/Apps/Utility/SilotiUtility/ReplayInstance"
Type = "TCL"
Icon = "replay_assertion_instance.png"
Procedure = "wi_replay_assertion_instance"
Help = ""
Argument = FALSE
[Utility.Cone@#Of@#Influence]
Is_Group = FALSE
DisplayName = "Cone Of Influence"
RcName = "Cone@#Of@#Influence"
FileName = "coi.tcl"
Path = "/share/VIA/Apps/Utility/ConeOfInfluence"
Type = "TCL"
Icon = "coi.png"
Procedure = "coi_main"
Help = "coi.htm"
Argument = FALSE
